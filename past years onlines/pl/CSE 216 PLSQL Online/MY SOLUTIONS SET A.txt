--1

CREATE OR REPLACE FUNCTION "DEFAULT_COMMISSION_PCT" (MID IN EMP.MANAGER_ID%TYPE) RETURN EMP.COMMISSION_PCT%TYPE IS
cp EMP.COMMISSION_PCT%TYPE;
av EMP.COMMISSION_PCT%TYPE;
BEGIN
	SELECT AVG(NVL(COMMISSION_PCT,0)) INTO av FROM EMP WHERE MANAGER_ID=MID;
	IF MID>=123 THEN
		cp:=av*0.0001/100;
	ELSIF MID>=110 AND MID<123 THEN
		cp:=av*0.012/100;
	ELSE
		cp:=0.1;
	END IF;
	RETURN cp;
END;

--2

CREATE OR REPLACE PROCEDURE "CHANGE_ALL" IS
	x EMP.COMMISSION_PCT%TYPE;
BEGIN
	FOR I IN(SELECT * FROM EMP)
	LOOP
		IF I.COMMISSION_PCT IS NULL THEN
			x:=DEFAULT_COMMISSION_PCT(I.MANAGER_ID);
			UPDATE EMP SET COMMISSION_PCT=x WHERE EMPLOYEE_ID=I.EMPLOYEE_iD;
			DBMS_OUTPUT.PUT_LINE('CHANGED');
		ELSE
			DBMS_OUTPUT.PUT_LINE('NOT CHANGED');
		END IF;
	END LOOP;
END;

--3
CREATE OR REPLACE TRIGGER CHECK_CONSISTENCY
BEFORE INSERT ON EMP
FOR EACH ROW
WHEN (NVL(NEW.COMMISSION_PCT,-1)<0 OR NVL(NEW.COMMISSION_PCT,101)>100)
DECLARE
	X INTEGER;
BEGIN
	SELECT COUNT(*) INTO X FROM EMP WHERE MANAGER_ID=:NEW.MANAGER_ID;
	IF X=0 THEN
		:NEW.COMMISSION_PCT:=0.2;
	ELSE
		:NEW.COMMISSION_PCT:=DEFAULT_COMMISSION_PCT(:NEW.MANAGER_ID);
	END IF;
EXCEPTION
	WHEN OTHERS THEN
		DBMS_OUTPUT.put_line ('Last Error: ' || DBMS_SQL.LAST_ERROR_POSITION ());
		RAISE;
END;

--ERROR CHECKING IN TRIGGER
select * from user_errors where type = 'TRIGGER' and name = 'CHECK_CONSISTENCY';